<?php

namespace {{ namespace }};

use {{ parent_implementor }} as Base{{ parent_class_name }};

/**
 * This class may be used to customize the behaviour of the
 * '{{ module_name }}' documents and has built-in validation and
 * change tracking.
 *
{% for line in description %}
 * {{ line }}
{% endfor %}
 *
 * To get all changes since the last call to 'markClean()' use
 * the 'getChanges()' method. Call 'isClean()' to get a summary.
 *
 * To check if the document is in a coherent state according
 * to the set attributes use the 'isValid()' method and check the
 * specific validation results via 'getValidationResults()'.
 * Every validation incident above NOTICE level marks this
 * document as invalid.
 *
 * There is no default document or module wide validation atm,
 * but this may be implemented via overriding the 'isValid()'
 * method or by registering and implementing change event listeners
 * via the '(add|remove)DocumentChangedListener()' methods.
 *
 * For more information and hooks have a look at the base classes.
 */
class {{ class_name }} extends Base{{ parent_class_name }}
{
    ///**
    // * @see parent::onBeforeWrite()
    // */
    //public function onBeforeWrite()
    //{
    //   parent::onBeforeWrite();
    //
    //    foreach ($this->getChanges() as $value_changed_event) {
    //        // here be dragons
    //   }
    //}
}
